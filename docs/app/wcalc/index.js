"use strict";let msg,updating=!1,last_item,items=[];function has_value(e){return e.length>0&&!isNaN(parseFloat(e))}function item_elements(e){const t=e.querySelector("input[name=vnum]"),n=e.querySelector("input[name=vrange]"),r=e.querySelector(".weight"),u=e.querySelector("input[type=checkbox]"),l=e.querySelector("button");return{parent:e,value_number:t,value_range:n,weight:r,locker:u,button:l}}function item_remove(e){items=items.filter(t=>t!=e),e.parent.remove(),update_values()}function item_add(){const e=document.createElement("tr");e.innerHTML=`
<td><input name='vnum' type='number' value='50'/>
&nbsp;<input name='vrange' type='range' min='0' max='100' value='50'/></td>
<td><input type='number' class='weight' value='1'/></td>
<td><input type='checkbox' checked/></td>
<td><button name='remove'><strong>-</strong></button></td>
`;const t=item_elements(e);item_setup_events(t);const n=items.length-1;items.push(items[n]),items[n]=t,last_item.parentElement.insertBefore(e,last_item),update_values()}function item_setup_events(e){e.locker.addEventListener("change",update_values),e.value_number.addEventListener("change",()=>{updating||(updating=!0,e.value_range.value=has_value(e.value_number.value)?e.value_number.value:"0",updating=!1,update_values())}),e.value_range.addEventListener("change",()=>{updating||(updating=!0,e.value_number.value=e.value_range.value,updating=!1,update_values())}),has_value(e.value_number.value)?e.value_range.value=e.value_number.value:(e.value_number.value="0",e.value_range.value="0"),e.weight.tagName.toLowerCase()=="input"?(e.weight.addEventListener("change",update_values),e.button.addEventListener("click",()=>item_remove(e))):e.button.addEventListener("click",item_add)}function item_get(e){const t=parseFloat(e.value_range.value);let n=0;try{n=parseFloat(e.weight.value)}catch{}const r=e.locker.checked===!0;return{value:t,weight:n,locked:r}}function item_set(e,t){e.value_number.value=t.value.toString(),e.value_range.value=t.value.toString(),e.weight.tagName.toLowerCase()=="input"?e.weight.value=t.weight.toString():e.weight.innerText=t.weight.toFixed(1),e.locker.checked=t.locked}function update_values(){updating=!0;const e=items.map(l=>item_get(l)),t=items.length-1;let n=0,r=0,u=0;for(let l=0;l<t;l++){const a=e[l];n+=a.weight,a.locked&&(r+=a.value*a.weight,u+=a.weight)}if(e[t].weight=n,e[t].locked){if(item_set(items[t],e[t]),n==u){console.log(`${n} == ${u}`),msg.innerText="Destrave algum(s) dos items";return}const l=(e[t].value*n-r)/(n-u);for(let a=0;a<t;a++)e[a].locked||(e[a].value=l,item_set(items[a],e[a]))}else{if(n!=u){msg.innerText="Ou o resultado deve ser destravado, ou o(s) item(s)";return}e[t].value=r/u,item_set(items[t],e[t])}msg.innerText="",updating=!1}window.addEventListener("load",()=>{msg=document.body.querySelector("#a_msg"),last_item=(()=>{const e=Array.from(document.body.querySelector("#a_table").querySelectorAll("tr"));return e[e.length-1]})(),items.push(item_elements(last_item));for(let e=0;e<items.length;e++)item_setup_events(items[e]);update_values()});
